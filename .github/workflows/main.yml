name: Pipeline

on:
  push:

jobs:
  build_test_lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.12.1
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: pip install --upgrade pip && pip install -r requirements.txt
      - name: Run tests
        run: pytest
      - name: Run linter
        run: flake8
      - name: Publish coverage
        run: echo "Publish coverage results here"

  build_and_push_and_pull_and_run_docker_image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.12.1
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: pip install --upgrade pip && pip install -r requirements.txt
      - name: Run tests
        run: pytest
      - name: Run linter
        run: flake8
      - name: Publish coverage
        run: echo "Publish coverage results here"
      - name: Set up Docker
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKERHUB_EMAIL }} -p ${{ secrets.DOCKER_PASSWORD }}
      - name: Build, push, pull, and run Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/your-repo:${{ github.sha }} .
          docker push ${{ secrets.DOCKER_USERNAME }}/your-repo:${{ github.sha }}
          docker pull ${{ secrets.DOCKER_USERNAME }}/your-repo:${{ github.sha }}
          docker run -d -p 8080:80 ${{ secrets.DOCKER_USERNAME }}/your-repo:${{ github.sha }}
