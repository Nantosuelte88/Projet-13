name: Deploy to Render

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_run:
    workflows: ["Docker Image CI"]
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Download Docker image metadata
        uses: actions/download-artifact@v3
        with:
          name: docker-image-metadata
          path: ./metadata

      - name: Read Docker image metadata
        id: metadata
        run: |
          DOCKER_REPO=$(cat ./metadata/DOCKER_REPO)
          IMAGE_TAG=$(cat ./metadata/IMAGE_TAG)
          echo "DOCKER_REPO=$DOCKER_REPO" >> $GITHUB_ENV
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Deploy to Render
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
          DOCKER_IMAGE: ${{ env.DOCKER_REPO }}:${{ env.IMAGE_TAG }}
          SERVICE_NAME: my-django-app-${{ github.sha }}
        run: |
          echo "Creating new service on Render"
          curl -X POST \
            -H "Authorization: Bearer $RENDER_API_KEY" \
            -H "Content-Type: application/json" \
            -d '{
              "serviceDetails": {
                "name": "'"$SERVICE_NAME"'",
                "type": "web",
                "env": "docker",
                "repo": null,
                "branch": null,
                "autoDeploy": false,
                "dockerfilePath": "Dockerfile",
                "buildCommand": "docker build -t '"$DOCKER_IMAGE"' .",
                "startCommand": "docker run -p 8000:8000 '"$DOCKER_IMAGE"'"
              }
            }' \
            https://api.render.com/v1/services
